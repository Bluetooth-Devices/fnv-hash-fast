[project]
name = "fnv-hash-fast"
version = "1.5.0"
license = "MIT"
description = "A fast version of fnv1a"
readme = "README.md"
authors = [{ name = "J. Nick Koston", email = "nick@koston.org" }]
requires-python = ">=3.10"

[project.urls]
"Repository" = "https://github.com/bluetooth-devices/fnv-hash-fast"
"Bug Tracker" = "https://github.com/bluetooth-devices/fnv-hash-fast/issues"
"Changelog" = "https://github.com/bluetooth-devices/fnv-hash-fast/blob/main/CHANGELOG.md"

[tool.poetry]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
]
packages = [
    { include = "fnv_hash_fast", from = "src" },
]
exclude = [ "**/*.c" ]

[tool.poetry.build]
generate-setup-file = true
script = "build_ext.py"

[tool.poetry.dependencies]
python = "^3.10"
fnvhash = ">=0.1,<0.3"

[tool.poetry.group.dev.dependencies]
pytest = ">=7,<9"
pytest-cov = ">=3,<8"
pytest-codspeed = ">=3.1.2,<5.0.0"

[tool.semantic_release]
branch = "main"
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/fnv_hash_fast/__init__.py:__version__"]
build_command = "pip install poetry && poetry build"

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=fnv_hash_fast --cov-report=term-missing:skip-covered"
pythonpath = ["src"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    "if TYPE_CHECKING",
    "raise NotImplementedError",
    'if __name__ == "__main__":',
]

[tool.isort]
profile = "black"
known_first_party = ["fnv_hash_fast", "tests"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
exclude = [
    'setup.py',
]

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true


[build-system]
requires = ['setuptools>=77.0', 'Cython>=3', "poetry-core>=2.1.0"]
build-backend = "poetry.core.masonry.api"
